//<App !Start!>
// FILE: [projects.ino]
// Created by GUIslice Builder version: [0.16.b004]
//
// GUIslice Builder Generated File
//
// For the latest guides, updates and support view:
// https://github.com/ImpulseAdventure/GUIslice
//
//<App !End!>

// ------------------------------------------------
// Headers to include
// ------------------------------------------------
#include "projects_GSLC.h"

// ------------------------------------------------
// Program Globals
// ------------------------------------------------

// Save some element references for direct access
//<Save_References !Start!>
gslc_tsElemRef *m_pElemProgress1 = NULL;
gslc_tsElemRef *m_pElemProgress1_2 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_4 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_4_6 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_4_8 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_4_8_10 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_4_8_12 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_4_8_14 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_5 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_7 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_7_11 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_7_13 = NULL;
gslc_tsElemRef *m_pElemProgress1_2_7_9 = NULL;
gslc_tsElemRef *m_pElemProgress1_3 = NULL;
//<Save_References !End!>

// Define debug message function
static int16_t DebugOut(char ch)
{
  if (ch == (char)'\n')
    Serial.println("");
  else
    Serial.write(ch);
  return 0;
}

// ------------------------------------------------
// Callback Methods
// ------------------------------------------------
// Common Button callback
bool CbBtnCommon(void *pvGui, void *pvElemRef, gslc_teTouch eTouch, int16_t nX, int16_t nY)
{
  // Typecast the parameters to match the GUI and element types
  gslc_tsGui *pGui = (gslc_tsGui *)(pvGui);
  gslc_tsElemRef *pElemRef = (gslc_tsElemRef *)(pvElemRef);
  gslc_tsElem *pElem = gslc_GetElemFromRef(pGui, pElemRef);

  if (eTouch == GSLC_TOUCH_UP_IN)
  {
    // From the element's ID we can determine which button was pressed.
    switch (pElem->nId)
    {
      //<Button Enums !Start!>
    case E_ELEM_BTN_HOME:
      gslc_SetPageCur(&m_gui, E_PG_HOME);
      break;
    case E_ELEM_BTN_SETTINGS:

      break;
    case E_ELEM_BTN_MONITOR:
      gslc_SetPageCur(&m_gui, E_PG_Monitor);
      break;
    case E_ELEM_BTN4:
      break;
    case E_ELEM_BTN5:
      break;
      //<Button Enums !End!>
    default:
      break;
    }
  }
  return true;
}
//<Checkbox Callback !Start!>
//<Checkbox Callback !End!>
//<Keypad Callback !Start!>
//<Keypad Callback !End!>
//<Spinner Callback !Start!>
//<Spinner Callback !End!>
//<Listbox Callback !Start!>
//<Listbox Callback !End!>
//<Draw Callback !Start!>
//<Draw Callback !End!>
//<Slider Callback !Start!>
//<Slider Callback !End!>
//<Tick Callback !Start!>
//<Tick Callback !End!>
